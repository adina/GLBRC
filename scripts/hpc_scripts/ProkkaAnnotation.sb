#!/bin/bash --login
########## Define Resources Needed with SBATCH Lines ##########
 
#SBATCH --time=4:00:00            # limit of wall clock time - how long the job will run (same as -t)
#SBATCH --ntasks=1                 # number of tasks - how many tasks (nodes) that you require (same as -n)
#SBATCH --cpus-per-task=20         # number of CPUs (or cores) per task (same as -c)
#SBATCH --mem=50G                  # memory required per node - amount of memory (in bytes)
#SBATCH --job-name prokkaAn        # you can give your job a name for easier identification (same as -J)
#SBATCH --account shadeash-colej 
#SBATCH --output=Prok.log.o
#SBATCH --error=Prok.log.e


# cd /mnt/research/ShadeLab/GLBRC                 ### change to the directory where your code is located
 
# srun -A shadeash-colej prokka assemblies/GLBRC_Metagenome/final.contigs.fa --force --outdir annotations/prokka_out/ --norrna --notrna --metagenome --cpus 20             ### call your executable
 
# scontrol show job $SLURM_JOB_ID     ### write job information to output file

source ~/bin/anaconda3/bin/activate

#Home Folder
GLBRC=/mnt/research/ShadeLab/GLBRC
cd $SCRATCH/bowtieDB

prokka MAG_Assembly.fa --force --outdir mags --prefix MAG_Assembly --norrna --notrna --metagenome --cpus 20 
cd mags
grep "eC_number=" MAG_Assembly.gff | cut -f9 | cut -f1,2 -d ';'| sed 's/ID=//g'| sed 's/;eC_number=/\t/g' > PROKKA.MAG_Assembly.ec
egrep "COG[0-9]{4}" MAG_Assembly.gff | cut -f9 | sed 's/.\+COG\([0-9]\+\);locus_tag=\(PROKKA_[0-9]\+\);.\+/\2\tCOG\1/g' > PROKKA.MAG_Assembly.cog

echo -en "\n\nBuilding MinPath Report\n\n"

python2 ~/bin/MinPath/MinPath1.2.py -any PROKKA.MAG_Assembly.ec -map $GLBRC/annotations/metagenomics-workshop/reference_db/kegg/ec.to.pwy -report PROKKA.MAG_Assembly.kegg.minpath



# MAGs
# MAGS_DIR=$GLBRC/mags/Final.contigs.fa.metabat-bins40

# cd $MAGS_DIR
# # files=(*.fa)
# files=$(awk '{print $1}' 50PrcntCompleteBins.txt)
# cd /mnt/gs18/scratch/users/dooleys1/bowtieDB/mags

# for fasta in "${files[@]}"; do 
# 	cp $MAGS_DIR/$fasta ./
# 	binNum=${fasta/\.fa/}
# 	binNum=${binNum/\./_}
# 	prokka $fasta --force --outdir $binNum --prefix $binNum --norrna --notrna --metagenome --cpus 20 &>$binNum.log
# 	cd $binNum
# 	mv ../$binNum.log ./
# 	grep "eC_number=" $binNum.gff | cut -f9 | cut -f1,2 -d ';'| sed 's/ID=//g'| sed 's/;eC_number=/\t/g' > PROKKA.$binNum.ec
# 	egrep "COG[0-9]{4}" $binNum.gff | cut -f9 | sed 's/.\+COG\([0-9]\+\);locus_tag=\(PROKKA_[0-9]\+\);.\+/\2\tCOG\1/g' > PROKKA.$binNum.cog
# 	python2 ~/bin/MinPath/MinPath1.2.py -any PROKKA.$binNum.ec -map $GLBRC/annotations/metagenomics-workshop/reference_db/kegg/ec.to.pwy -report PROKKA.$binNum.kegg.minpath > MinPath.KEGG.$binNum.log

# 	cd ..
# 	break
# done
# #

# myarr=($(ps -u kdride | awk '{ print $1 }'))
# files=($(awk '{print $1}' 50PrcntCompleteBins.txt))

# for fasta in "${files[@]}"; do     cat Final.contigs.fa.metabat-bins40/$fasta.fa>>MAG_Assembly.fa; done